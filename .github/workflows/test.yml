name: Test 1
run-name: ${{ github.actor }} has triggered test action ðŸš€

on: [push]

jobs:
  detect-api-changes:
    name: Detect API Changes
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Delete note.txt and main.note.txt if exist
        run: rm -f note.txt main.note.txt

      - name: Switch to main branch
        run: |
          git fetch origin main
          git checkout main

      - name: Create main.note.txt with text 'MAIN TEST'
        run: echo 'MAIN TEST' > main.note.txt

      - name: Upload main.note.txt as artifact
        uses: actions/upload-artifact@v4
        with:
          name: main-note
          path: main.note.txt

      - name: Switch back to dev branch
        run: git checkout -

      - name: Create note.txt with text 'TEST'
        run: echo 'TEST' > note.txt

      - name: Download main.note.txt artifact
        uses: actions/download-artifact@v4
        with:
          name: main-note
          path: .

      - name: Compare note.txt and main.note.txt
        run: |
          if cmp -s "note.txt" "main.note.txt"; then
            echo "The files are identical"
          else
            echo "The files are different"
          fi

      - name: Clean Up
        run: rm -f note.txt main.note.txt

      - name: Check PR description for breaking change
        run: |
          if [[ 1 == 1 ]]; then
            set +e
            out=$(exit 1 2>/dev/null)
            echo $out
            set -e
          else
            echo "BREAKING_CHANGE_FLAG_CHECKED=false" >> $GITHUB_ENV
          fi

      - name: Conditionally add comment to PR about breaking change
        if: ${{ env.BREAKING_CHANGE_FLAG_CHECKED == 'false' }}
        run: echo "Breaking changes detected in the API!"
